define("tiny_ai/textmark",["exports"],(function(_exports){
/**
   * Tiny AI Mark Changed text.
   *
   * This module marks text that was returned by the AI service
   * and that has been changed by a human prior to being inserted.
   *
   * @module      tiny_ai/ui
   * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
function wrapInSpan(editedSection){return new Promise(((resolve,reject)=>{try{resolve('<span class="user-edited">'.concat(editedSection,"</span>"))}catch(error){reject(error)}}))}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.wrapEditedSections=function(originalText,editedText){return new Promise((async(resolve,reject)=>{try{let differences=function(originalText,editedText){let differences=[],i=0;for(;i<originalText.length||i<editedText.length;){let originalChar=originalText[i],editedChar=editedText[i];if(originalChar===editedChar)i++;else{let start=i;for(;originalChar!==editedChar&&i<editedText.length;)i++,originalChar=originalText[i],editedChar=editedText[i];let editedSection=editedText.slice(start,i);differences.push({start:start,end:i,text:editedSection})}}return differences}(originalText,editedText),wrappedText=editedText;for(let i=differences.length-1;i>=0;i--){let{start:start,end:end,text:text}=differences[i],wrappedSection=await wrapInSpan(text);wrappedText=wrappedText.slice(0,start)+wrappedSection+wrappedText.slice(end)}resolve(wrappedText)}catch(error){reject(error)}}))},_exports.wrapInSpan=wrapInSpan}));

//# sourceMappingURL=textmark.min.js.map