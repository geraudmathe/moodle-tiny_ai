{"version":3,"file":"textmark.min.js","sources":["../src/textmark.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny AI Mark Changed text.\n *\n * This module marks text that was returned by the AI service\n * and that has been changed by a human prior to being inserted.\n *\n * @module      tiny_ai/ui\n * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\n/**\n * Wraps the given edited section in a span tag with a 'user-edited' class.\n *\n * @param {string} editedSection The edited section of the text.\n * @returns {Promise<string>} A promise that resolves with the wrapped edited section.\n */\nexport function wrapInSpan(editedSection) {\n    return new Promise((resolve, reject) => {\n        try {\n            let wrappedText = `<span class=\"user-edited\">${editedSection}</span>`;\n            resolve(wrappedText);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\n/**\n * Finds the differences between the original and edited text.\n * @param {string} originalText The original text.\n * @param {string} editedText The edited text.\n * @returns {Array<Object>} An array of difference objects with start, end, and text properties.\n */\nfunction findDifferences(originalText, editedText) {\n    let differences = [];\n    let i = 0;\n\n    while (i < originalText.length || i < editedText.length) {\n        let originalChar = originalText[i];\n        let editedChar = editedText[i];\n\n        if (originalChar === editedChar) {\n            i++;\n        } else {\n            let start = i;\n            while (originalChar !== editedChar && i < editedText.length) {\n                i++;\n                originalChar = originalText[i];\n                editedChar = editedText[i];\n            }\n            let editedSection = editedText.slice(start, i);\n            differences.push({start, end: i, text: editedSection});\n        }\n    }\n\n    return differences;\n}\n\n/**\n * Wraps the edited sections of the text in span tags with a 'user-edited' class.\n * @param {string} originalText The original text.\n * @param {string} editedText The edited text.\n * @returns {Promise<string>} A promise that resolves with the text containing wrapped edited sections.\n */\nexport function wrapEditedSections(originalText, editedText) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            let differences = findDifferences(originalText, editedText);\n            let wrappedText = editedText;\n\n            for (let i = differences.length - 1; i >= 0; i--) {\n                let {start, end, text} = differences[i];\n                let wrappedSection = await wrapInSpan(text);\n                wrappedText = wrappedText.slice(0, start) + wrappedSection + wrappedText.slice(end);\n            }\n\n            resolve(wrappedText);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n"],"names":["wrapInSpan","editedSection","Promise","resolve","reject","error","originalText","editedText","async","differences","i","length","originalChar","editedChar","start","slice","push","end","text","findDifferences","wrappedText","wrappedSection"],"mappings":";;;;;;;;;;;SAiCgBA,WAAWC,sBAChB,IAAIC,SAAQ,CAACC,QAASC,cAGrBD,4CAD+CF,0BAEjD,MAAOI,OACLD,OAAOC,wGA0CgBC,aAAcC,mBACtC,IAAIL,SAAQM,MAAOL,QAASC,kBAEvBK,qBAlCSH,aAAcC,gBAC/BE,YAAc,GACdC,EAAI,OAEDA,EAAIJ,aAAaK,QAAUD,EAAIH,WAAWI,QAAQ,KACjDC,aAAeN,aAAaI,GAC5BG,WAAaN,WAAWG,MAExBE,eAAiBC,WACjBH,QACG,KACCI,MAAQJ,OACLE,eAAiBC,YAAcH,EAAIH,WAAWI,QACjDD,IACAE,aAAeN,aAAaI,GAC5BG,WAAaN,WAAWG,OAExBT,cAAgBM,WAAWQ,MAAMD,MAAOJ,GAC5CD,YAAYO,KAAK,CAACF,MAAAA,MAAOG,IAAKP,EAAGQ,KAAMjB,wBAIxCQ,YAYmBU,CAAgBb,aAAcC,YAC5Ca,YAAcb,eAEb,IAAIG,EAAID,YAAYE,OAAS,EAAGD,GAAK,EAAGA,IAAK,KAC1CI,MAACA,MAADG,IAAQA,IAARC,KAAaA,MAAQT,YAAYC,GACjCW,qBAAuBrB,WAAWkB,MACtCE,YAAcA,YAAYL,MAAM,EAAGD,OAASO,eAAiBD,YAAYL,MAAME,KAGnFd,QAAQiB,aACV,MAAOf,OACLD,OAAOC"}