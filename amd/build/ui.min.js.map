{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny AI UI.\n *\n * @module      tiny_ai/ui\n * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport AiModal from 'tiny_ai/modal';\nimport Ajax from 'core/ajax';\n\n/**\n * Display the modal when the AI button is clicked.\n *\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\nexport const displayModal = async(editor) => {\n    const modalObject = await ModalFactory.create({\n        type: AiModal.TYPE,\n        templateContext: getTemplateContext(editor),\n        large: true,\n    });\n\n    const modalroot = await modalObject.getRoot();\n    const root = modalroot[0];\n\n    const loadingSpinnerDiv = root.querySelector('#' + editor.id + \"_tiny_ai_spinner\");\n    const overlayDiv = root.querySelector('#' + editor.id + '_tiny_ai_overlay');\n    const blurDiv = root.querySelector('#' + editor.id + '_tiny_ai_blur');\n    const currentForm = root.querySelector('form');\n\n    modalObject.show();\n    modalroot.on(ModalEvents.hidden, () => {\n        modalObject.destroy();\n    });\n\n    root.addEventListener('click', (e) => {\n        const submitAction = e.target.closest('[data-action=\"generate\"]');\n        if (submitAction) {\n            e.preventDefault();\n            loadingSpinnerDiv.classList.remove('hidden');\n            overlayDiv.classList.remove('hidden');\n            blurDiv.classList.add('tiny-ai-blur');\n            submitAction.innerHTML = 'Generating...';\n            submitAction.disabled = true;\n            window.console.log(currentForm);\n            window.console.log(editor.options);\n            // TODO: Destroy the modal and call the AI service.\n        }\n    });\n};\n\n/**\n * Get the context to use in the modal template.\n *\n * @param {TinyMCE.editor} editor\n * @returns {Object}\n */\nconst getTemplateContext = (editor) => {\n\n    return {\n        elementid: editor.id,\n    };\n};\n"],"names":["async","modalObject","ModalFactory","create","type","AiModal","TYPE","templateContext","getTemplateContext","editor","large","modalroot","getRoot","root","loadingSpinnerDiv","querySelector","id","overlayDiv","blurDiv","currentForm","show","on","ModalEvents","hidden","destroy","addEventListener","e","submitAction","target","closest","preventDefault","classList","remove","add","innerHTML","disabled","window","console","log","options","elementid"],"mappings":";;;;;;;oSAiC4BA,MAAAA,eAClBC,kBAAoBC,uBAAaC,OAAO,CAC1CC,KAAMC,eAAQC,KACdC,gBAAiBC,mBAAmBC,QACpCC,OAAO,IAGLC,gBAAkBV,YAAYW,UAC9BC,KAAOF,UAAU,GAEjBG,kBAAoBD,KAAKE,cAAc,IAAMN,OAAOO,GAAK,oBACzDC,WAAaJ,KAAKE,cAAc,IAAMN,OAAOO,GAAK,oBAClDE,QAAUL,KAAKE,cAAc,IAAMN,OAAOO,GAAK,iBAC/CG,YAAcN,KAAKE,cAAc,QAEvCd,YAAYmB,OACZT,UAAUU,GAAGC,sBAAYC,QAAQ,KAC7BtB,YAAYuB,aAGhBX,KAAKY,iBAAiB,SAAUC,UACtBC,aAAeD,EAAEE,OAAOC,QAAQ,4BAClCF,eACAD,EAAEI,iBACFhB,kBAAkBiB,UAAUC,OAAO,UACnCf,WAAWc,UAAUC,OAAO,UAC5Bd,QAAQa,UAAUE,IAAI,gBACtBN,aAAaO,UAAY,gBACzBP,aAAaQ,UAAW,EACxBC,OAAOC,QAAQC,IAAInB,aACnBiB,OAAOC,QAAQC,IAAI7B,OAAO8B,oBAYhC/B,mBAAsBC,SAEjB,CACH+B,UAAW/B,OAAOO"}