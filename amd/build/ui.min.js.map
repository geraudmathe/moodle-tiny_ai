{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny AI UI.\n *\n * @module      tiny_ai/ui\n * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport AiModal from 'tiny_ai/modal';\nimport Templates from 'core/templates';\n\n/**\n * Display the modal when the AI button is clicked.\n *\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\nexport const displayModal = async(editor) => {\n    window.console.log(editor);\n\n    const modalPromises = await ModalFactory.create({\n        type: AiModal.TYPE,\n        templateContext: getTemplateContext(editor),\n        large: true,\n    });\n\n    const loadingSpinner = await Templates.render('core/loading', {});\n\n    modalPromises.show();\n    const modalroot = await modalPromises.getRoot();\n    const root = modalroot[0];\n    const currentForm = root.querySelector('form');\n\n    modalroot.on(ModalEvents.hidden, () => {\n        modalPromises.destroy();\n    });\n\n    root.addEventListener('click', (e) => {\n        const submitAction = e.target.closest('[data-action=\"generate\"]');\n        if (submitAction) {\n            e.preventDefault();\n            modalPromises.setBody(loadingSpinner);\n            window.console.log(currentForm);\n            // TODO: Destroy the modal and call the AI service.\n        }\n    });\n};\n\n/**\n * Get the context to use in the modal template.\n *\n * @param {TinyMCE.editor} editor\n * @returns {Object}\n */\nconst getTemplateContext = (editor) => {\n\n    return {\n        elementid: editor.id,\n    };\n};\n"],"names":["async","window","console","log","editor","modalPromises","ModalFactory","create","type","AiModal","TYPE","templateContext","getTemplateContext","large","loadingSpinner","Templates","render","show","modalroot","getRoot","root","currentForm","querySelector","on","ModalEvents","hidden","destroy","addEventListener","e","target","closest","preventDefault","setBody","elementid","id"],"mappings":";;;;;;;8SAiC4BA,MAAAA,SACxBC,OAAOC,QAAQC,IAAIC,cAEbC,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMC,eAAQC,KACdC,gBAAiBC,mBAAmBR,QACpCS,OAAO,IAGLC,qBAAuBC,mBAAUC,OAAO,eAAgB,IAE9DX,cAAcY,aACRC,gBAAkBb,cAAcc,UAChCC,KAAOF,UAAU,GACjBG,YAAcD,KAAKE,cAAc,QAEvCJ,UAAUK,GAAGC,sBAAYC,QAAQ,KAC7BpB,cAAcqB,aAGlBN,KAAKO,iBAAiB,SAAUC,IACPA,EAAEC,OAAOC,QAAQ,8BAElCF,EAAEG,iBACF1B,cAAc2B,QAAQlB,gBACtBb,OAAOC,QAAQC,IAAIkB,wBAYzBT,mBAAsBR,SAEjB,CACH6B,UAAW7B,OAAO8B"}