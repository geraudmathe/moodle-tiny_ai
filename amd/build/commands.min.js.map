{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_ai plugin.\n *\n * @module      tiny_ai/commands\n * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {displayModal} from 'tiny_ai/ui';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    icon,\n} from './common';\n\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        buttonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('buttontitle', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the button.\n        editor.ui.registry.addToggleButton(component, {\n            icon,\n            tooltip: buttonText,\n            onAction: () => {\n                displayModal(editor);\n            },\n        });\n\n        // Register the menu item.\n        editor.ui.registry.addMenuItem(component, {\n            icon,\n            text: buttonText,\n            onAction: () => {\n                displayModal(editor);\n            },\n        });\n\n    };\n};\n"],"names":["async","buttonText","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addToggleButton","tooltip","onAction","addMenuItem","text"],"mappings":"4OAwCwBA,gBAEhBC,WACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,cAAeC,oBACzB,yBAAe,OAAQA,4BAGnBC,SAEJA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAG7CL,OAAOC,GAAGC,SAASI,gBAAgBP,kBAAW,CAC1CK,KAAAA,aACAG,QAASZ,WACTa,SAAU,0BACOR,WAKrBA,OAAOC,GAAGC,SAASO,YAAYV,kBAAW,CACtCK,KAAAA,aACAM,KAAMf,WACNa,SAAU,0BACOR"}